version: '2.0'

networks:
  network:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  program:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    networks:
      - network
  prometheus:
    image: prom/prometheus
    expose: 
      - 9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - network
    depends_on:
      - cadvisor
  cadvisor:
    image: google/cadvisor
    expose: 
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - network
    depends_on:
      - program
  grafana:
    image: grafana/grafana
    expose: 
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
    entrypoint: bash /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - network
    depends_on:
      - prometheus
